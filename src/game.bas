0 REM 7DRL2024 ENTRY BY NONCHO SAVOV
5 REM COPYRIGHT (C) 2024 BY FOUMARTGAMES

10 ONERR GOTO 60000 : REM BETTER ERROR HANDLING (NEEDS 14 BYTES AT THE BEGINNING IN A REM)
20 FOR I = 826 TO 839 : REM WRITE THE MACHINE CODE IN THE BEGINNING OF THIS SAME BASIC FILE
30   READ K
40   POKE I,K
50 NEXT
80 DATA 166,222,189,96,210,72,32,92,219,232,104,16,245,96

100 GOTO 2000


195 REM BELOW ARE ROUTINES THAT NEED TO BE FAST, REM THEREFORE THEY ARE AT THE BEGINNING OF THE PROGRAM


199 REM HTAB() BUG HANDLING - MAKE SURE WE HAVE THE CORRECT HORIZONTAL POSITION
200 POKE 1147,WW-1 : POKE 1403,WW-1 : POKE 36,WW-1
260 RETURN


279 REM RUN FRE BASIC COMMAND TO FORCE GC, OR PRODOS FRE. DISPLAY FREE MEMORY LEFT IF IN DEBUG MODE
280 IF FF = 1 THEN AVAIL = FRE(0)
284 IF FF = 2 THEN ? D$;"FRE"
286 FF = 0
288 IF DEBUG = 0 THEN RETURN
290 IF DEBUG > 0 THEN HTAB(62) : VTAB (24) : PRINT MI$;" free:";INT(AVAIL/1000);"k ";AVAIL;
291 IF (AVAIL > 9999) THEN PRINT " ";NI$; : GOTO 295
292 IF (AVAIL > 999) THEN PRINT "   ";NI$; : GOTO 295
293 PRINT "    ";NI$;
295 RETURN


299 REM MAP CHARACTER READ ROUTINE
300 WW = X : GOSUB 200
320 VTAB(Y) : REM SET POSITION
350 CALL 784: REM CALL THE GETCHAR ROUTINE LOADED AT $0310
355 A = PEEK(6)
360 IF A > 127 THEN A$ = N$ + CHR$(A)
365 IF A < 128 THEN A$ = M$ + CHR$(A) + N$
375 GOSUB 280 : REM FRE
380 REM TODO AT CHECK BYTES:
385 REM 0 (NOT MOVED YET) : -5 (MOVING IN) : -7 (MOVING IN MOUSE TETXT)
390 K = 0
395 RETURN



1995 REM VARIABLE DECLARATIONS
2000 DEBUG = PEEK(1023) : REM GET DEBUG SETTING SAVED BY STARTUP
2005 D$ = CHR$(4) : AVAIL = FRE(0)
2010 MI$ = CHR$(15) : REM TURN INVERSE ON
2015 NI$ = CHR$(14) : REM TURN INVERSE OFF
2020 M$ = MI$ + CHR$(27) : REM TURN SPECIAL CHARACTERS ON (80COL MOUSE TEXT CARD CHARS)
2025 N$ = CHR$(24) + NI$ : REM TURN SPECIAL CHARACTERS OFF
2030 KY = PEEK(49152) : REM VARIABLE TO KEEP LAST PRESSED KEY
2040 XX = 0 : REM VARIABLES TO BE USED IN SUBROUTINES LIKE THE ALTERNATIVE HTAB OR WHILE GENERATING A STAGE
2045 FF = 0 : REM SET TO 1 TO PERFORM FRE(0), SET TO 2 TO PERFORM THE PRODOS FRE() COMMAND
2050 MOVING = 0 : MDIR = 0
2055 FF$ = "SCREEN"
2060 SIZE = 5 : REM INITIALIZE MAZE DIMENSIONS
2065 DIM MAP(SIZE,SIZE) : REM DECLARE MAP CONNECTIONS ARRAY
2070 DIM VISIBLES(SIZE,SIZE) : REM DECLARE MAP VISITED ROOMS ARRAY
2072 DIM INSIDES(SIZE,SIZE) : REM DECLARE MAP CONTENTS ARRAY
2080 GOSUB 20500 : REM GET MAP DATA FROM MEMORY
2090 RX = 0 : REM ROOM X COORDINATE
2100 RY = 0 : REM ROOM Y COORDINATE
2110 ZX = 0 : REM MOVING DIRECTION OFFSET X
2120 ZY = 0 : REM MOVING DIRECTION OFFSET Y


2999 REM DECLARE PLAYER VARIABLES
3000 DIM CLASSES$(3) : REM F : R : S
3010 CLASSES$(1) = "Fighter" : CLASSES$(2) = "Strider" : CLASSES$(3) = "Scholar"

3020 DIM F1$(3)
3030 F1$(1) = "Knight" : F1$(2) = "Warrior" : F1$(3) = "Monk"
3040 DIM F2$(4)
3050 F2$(1) = "Paladin" : F2$(2) = "Dragoon" : F2$(3) = "Barbarian" : F2$(4) = "Gladiator"
3060 DIM F3$(8)
3070 F3$(1) = "Templar" : F3$(2) = "Crusader" : F3$(3) = "Lancer" : F3$(4) = "Samurai" : F3$(5) = "Berserker" : F3$(6) = "Viking" : F3$(7) = "Slayer" : F3$(8) = "Zealot"

3120 DIM R1$(3)
3130 R1$(1) = "Ranger" : R1$(2) = "Rogue" : R1$(3) = "Bard"
3140 DIM R2$(4)
3150 R2$(1) = "Wanderer" : R2$(2) = "Archer" : R2$(3) = "Thief" : R2$(4) = "Brigand"
3160 DIM R3$(8)
3170 R3$(1) = "Hunter" : R3$(2) = "Pathfinder" : R3$(3) = "Marksman" : R3$(4) = "Sharpshooter" : R3$(5) = "Ninja" : R3$(6) = "Stalker" : R3$(7) = "Assassin" : R3$(8) = "Marauder"

3220 DIM S1$(3)
3230 S1$(1) = "Wizard" : S1$(2) = "Cleric" : S1$(3) = "Druid"
3240 DIM S2$(4)
3250 S2$(1) = "Magician" : S2$(2) = "Conjurer" : S2$(3) = "Priest" : S2$(4) = "Alchemist"
3260 DIM S3$(8)
3270 S3$(1) = "Warlock" : S3$(2) = "ArchMage" : S3$(3) = "Sorcerer" : S3$(4) = "Enchanter" : S3$(5) = "Seer" : S3$(6) = "Oracle" : S3$(7) = "Sage" : S3$(8) = "Shaman"


3580 DIM ITEMS$(5, 4) : REM 1:WEAPON, 2:SECONDARY ITEM, 3:ARMOR, 4:HEAD GEAR, 5:SPECIAL ITEM (RING, BRACER, AMULET, ETC.)

3590 GOSUB 20000 : REM GET PLAYER DATA FROM MEMORY
3600 GOSUB 21000 : REM DISPLAY PLAYER STATS




7000 X = PEEK(1022) : Y = PEEK(1021) : REM INITIAL PLAYER POSITION (X VARIES, Y IS ALWAYS AT THE BOTTOM)
7010 RW = 9 : RH = 4 : REM ROOM SIZE
7020 RX = INT(X/RW) : RY = INT(Y/RH) : REM MAP ROOMS COORDINATES
7040 A = 160 : REM HOLDS THE MAP TILE PLAYER IS CURRENTLY ON READ BY THE READCHAR ROUTINE.
7050 DIM PLAYER(3) : REM HOLDS X, Y, AND THE MAP CHARACTER THAT'S BEHIND THE UNIT
7060 PLAYER(1) = X : PLAYER(2) = Y : PLAYER(3) = A
7070 A$ = CHR$(160) : REM THE CHARACTER CODE READ BY THE ROUTINE BUT AS STRING
7080 TURN = 0
7090 RZ = 0 : REM SHOULD DOORS BE DRAWN WHEN DRAWING ROOMS 16000

7199 REM 
7200 DIM ROOMS$(4)

7219 REM EMPTY
7220 ROOMS$(1) = "  "

7229 REM ENTRANCE
7230 ROOMS$(2) = " "+M$+CHR$(93)+N$

7239 REM EXIT
7240 ROOMS$(3) = M$+CHR$(90)+CHR$(94)+N$

7249 REM ROMBUS
7250 ROOMS$(4) = " "+M$+CHR$(91)+N$

9000 GOSUB 30500 : REM DISPLAY DEBUG MAP

9100 V1 = 0 : V2 = 42 : V3 = 0 : V4 = 20 : GOSUB 23000
9200 HOME : GOSUB 23100

9500 GOSUB 22000 : REM DRAW ALL ROOMS ROUTINE
9600 RX = INT(X/RW) : RY = INT(Y/RH)

9985 GOSUB 300 : REM GET CHAR ROUTINE
9990 K = 0 : REM VTAB(1) : END : BREAK JUST BEFORE MAIN GAME LOOP

10000 PLAYER(1) = X : PLAYER(2) = Y : PLAYER(3) = A
10020 IF DEBUG THEN HTAB(40) : VTAB(1) : ? V;" ";M;" ";RX;"x";RY;
10050 WW = X : GOSUB 200 : VTAB(Y) : ? "@" : REM DRAW PLAYER

10750 KY = PEEK(49152) : GOSUB 24000 : REM GET LAST PRESSED KEY AND DISPLAY DEBUG CURSOR INFO
11200 IF KY = 0 THEN GOTO 10000
11210 IF KY = K THEN GOTO 10000
11220 K = KY : POKE 49168,0 : REM CLEAR THE KEYBOARD STROBE - ALWAYS AFTER READING KEYBOARD

11400 REM DISPLAY THE MAP CHAR AT THE PLAYER'S PREVIOUS POSITION AND PERFORM MOVE
11500 HTAB(X) : VTAB(Y)
11700 PRINT A$
11720 REM AA$ = A$ : REM TODO : FIX BLINKING
11750 IF K = 101 THEN GOTO 12300 : REM TOGGLE DEBUG WITH "E"

11780 REM -> (21)    D (68)     d (100)    L (76)     l (108)
11800 IF K = 149 OR K = 196 OR K = 228 OR K = 204 OR K = 236 THEN TURN = TURN + 1 : ZX = 1 : ZY = 0 : GOTO 12500 : GOSUB 30500 : REM RIGHT
11850 REM K = 21 OR K = 149 OR K = 68 OR K = 196 OR K = 100 OR K = 228 OR K = 76 OR K = 204 OR K = 108 OR K = 236 THEN GOTO 12500 : REM MOVING = 1 : MDIR = 1 : GOTO 12500 : REM RIGHT

11880 REM <- (8)     A (65)     a (87)     J (74)     j (106)
11900 IF K = 136 OR K = 193 OR K = 225 OR K = 202 OR K = 234 THEN TURN = TURN + 1 : ZX = -1 : ZY = 0 : GOTO 13000 : GOSUB 30500 : REM LEFT
11950 REM IF K = 8 OR K = 136 OR K = 65 OR K = 193 OR K = 97 OR K = 225 OR K = 74 OR K = 202 OR K = 106 OR K = 234 THEN GOTO 13000 : REM MOVING = 1 : MDIR = -1 : GOTO 13000 : REM LEFT

12020 REM ^ (11)     W (87)     w (119)    I (73)    i (105)
12050 IF K = 139 OR K = 215 OR K = 247 OR K = 201 OR K = 233 THEN TURN = TURN + 1 : ZX = 0 : ZY = -1 : GOTO 13500 : GOSUB 30500 : REM UP
12075 REM IF K = 8 OR K = 136 OR K = 65 OR K = 193 OR K = 97 OR K = 225 OR K = 74 OR K = 202 OR K = 106 OR K = 234 THEN GOTO 13500 : REM UP

12090 REM v (10)     S (83)     s (115)    K (75)     k (107)
12100 IF K = 138 OR K = 211 OR K = 243 OR K = 203 OR K = 235 THEN TURN = TURN + 1 : ZX = 0 : ZY = 1 : GOTO 14000 : GOSUB 30500 : REM DOWN
12150 REM IF K = 10 OR K = 138 OR K = 83 OR K = 211 OR K = 115 OR K = 243 OR K = 75 OR K = 203 OR K = 107 OR K = 235 THEN GOTO 14000 : REM DOWN

12200 IF K = 32 OR K = 160 THEN GOTO 14500 : REM SPACE

12250 GOTO 10000

12299 REM TRIGGER DEBUG WITH "E" KEY
12300 IF DEBUG < 4 THEN DEBUG = DEBUG + 1 : HTAB(1) : VTAB(24) : CALL -958 : GOTO 10000
12310 IF DEBUG = 4 THEN DEBUG = 0 : GOSUB 24000 : GOTO 10000

12498 REM TRIGGER MOVEMENT

12499 REM MOVE RIGHT
12500 IF A = 160 OR A = 93 OR A = 95 OR A = 90 OR A = 92 THEN X = X + 1 : GOSUB 300
12505 REM REVEAL OPENED ROOM RIGHT
12510 IF A = 255 THEN GOTO 12850
12599 REM OPEN DOOR RIGHT
12600 IF A = 94 THEN GOSUB 12960
12699 REM BLOCKED RIGHT
12700 IF A <> 160 AND A <> 93 AND A <> 90 AND (A <> 92 OR A = 92 AND Y<>19 AND Y<>15 AND Y<>11 AND Y<>7 AND Y<>3) THEN X = X - 1 : GOSUB 300
12800 GOSUB 30500 : GOTO 10000
12849 REM REVEAL
12850 IF MAP(RX+2, RY+1) = 6 THEN MAP(RX+2, RY+1) = 3 : GOSUB 30500
12855 IF MAP(RX+2, RY+1) = 7 THEN MAP(RX+2, RY+1) = 8 : GOSUB 30500
12860 IF MAP(RX+2, RY+1) = 9 THEN MAP(RX+2, RY+1) = 4 : GOSUB 30500
12865 RX = RX + 1 : VISIBLES(RX+1, RY+1) = 2 : A = 160 : A$ = " " : XX = RX * RW : YY = RY * RH : X1 = RX+1 : Y1 = RY+1
12870 GOSUB 16000 : IF RY < SIZE-1 THEN GOSUB 12920
12875 IF RX < SIZE-1 THEN GOSUB 12890
12880 GOTO 12800
12889 REM PLACE DOOR LEADING TO A ROOM ON THE RIGHT
12890 IF MAP(RX+2, RY+1) = 3 OR MAP(RX+2, RY+1) = 4 OR MAP(RX+2, RY+1) = 8 THEN VTAB(RY*RH+3) : HTAB((RX+1)*RW) : ? " ";M$;"\\\\";N$;
12900 IF MAP(RX+2, RY+1) = 6 OR MAP(RX+2, RY+1) = 7 OR MAP(RX+2, RY+1) = 9 THEN VTAB(RY*RH+3) : HTAB((RX+1)*RW) : ? M$;"^";N$;MI$;" ";NI$;
12910 RETURN
12919 REM PLACE DOOR LEADING TO A ROOM BELOW
12920 IF MAP(RX+1, RY+2) = 3 OR MAP(RX+1, RY+2) = 4 OR MAP(RX+1, RY+2) = 8 THEN VTAB(RY*RH+3) : HTAB(RX*RW-1) : ? " ";M$;"\\\\";N$;
12930 IF MAP(RX+1, RY+2) = 6 OR MAP(RX+1, RY+2) = 7 OR MAP(RX+1, RY+2) = 9 THEN VTAB(RY*RH+3) : HTAB(RX*RW) : ? M$;"^";N$;MI$;" ";NI$;
12940 RETURN
12959 REM OPEN
12960 VISIBLES(RX+2,RY+1) = 1 : XX = (RX+1) * RW : YY = RY * RH : X1 = RX+2 : Y1 = RY+1
12970 RZ = 1 : GOSUB 16000 : VTAB(Y) : HTAB(X-1) : ? " ";M$;"\\\\";N$;CHR$(127);
12980 RETURN

12999 REM MOVE LEFT
13000 IF A = 160 OR A = 93 OR A = 95 OR A = 90 OR A = 92 THEN X = X - 1 : GOSUB 300
13009 REM REVEAL OPENED ROOM LEFT
13010 IF A = 255 THEN GOTO 13350
13099 REM OPEN DOOR LEFT
13100 IF A = 94 THEN GOSUB 13460
13199 REM BLOCKED LEFT
13200 IF A <> 160 AND A <> 93 AND A <> 95 AND (A <> 92 OR A = 92 AND Y<>19 AND Y<>15 AND Y<>11 AND Y<>7 AND Y<>3) THEN X = X + 1 : GOSUB 300
13300 GOSUB 30500 : GOTO 10000
13349 REM REVEAL
13350 IF MAP(RX+1, RY+1) = 6 THEN MAP(RX+1, RY+1) = 3 : GOSUB 30500
13355 IF MAP(RX+1, RY+1) = 7 THEN MAP(RX+1, RY+1) = 8 : GOSUB 30500
13360 IF MAP(RX+1, RY+1) = 9 THEN MAP(RX+1, RY+1) = 4 : GOSUB 30500
13365 RX = RX - 1 : VISIBLES(RX+1, RY+1) = 2 : A = 160 : A$ = " " : XX = RX * RW : YY = RY * RH : X1 = RX+1 : Y1 = RY+1
13370 GOSUB 16000 : IF RY < SIZE-1 THEN GOSUB 13420
13375 REM IF RX < SIZE-1 THEN GOSUB 13390
13380 GOTO 13300
13389 REM PLACE DOOR LEADING TO A ROOM ON THE RIGHT
13390 REM IF MAP(RX, RY+1) = 3 OR MAP(RX, RY+1) = 4 OR MAP(RX, RY+1) = 8 THEN VTAB(RY*RH+3) : HTAB(RX*RW-1) : ? " ";M$;"\\\\";N$;
13400 REM IF MAP(RX, RY+1) = 6 OR MAP(RX, RY+1) = 7 OR MAP(RX, RY+1) = 9 THEN VTAB(RY*RH+3) : HTAB(RX*RW-1) : ? M$;"^";N$;MI$;" ";NI$;
13410 REM RETURN
13419 REM PLACE DOOR LEADING TO A ROOM BELOW
13420 IF MAP(RX+1, RY+2) = 2 OR MAP(RX+1, RY+2) = 4 OR MAP(RX+1, RY+2) = 9 THEN VTAB(RY*RH+5) : HTAB(RX*RW + 4) : ? M$;"_";N$;" ";M$;"Z";N$
13430 IF MAP(RX+1, RY+2) = 5 OR MAP(RX+1, RY+2) = 7 OR MAP(RX+1, RY+2) = 8 THEN VTAB(RY*RH+5) : HTAB(RX*RW + 4) : ? MI$;" ";NI$;M$;"^";N$;MI$;" ";NI$
13440 RETURN
13450 REM OPEN
13460 VISIBLES(RX,RY+1) = 1 : XX = (RX-1) * RW : YY = RY * RH : X1 = RX : Y1 = RY+1
13470 RZ = 1 : GOSUB 16000 : VTAB(Y) : HTAB(X-2) : ? CHR$(127);M$;"\\\\";N$;" ";
13480 REM IF RY < SIZE-1 THEN GOSUB 13375
13490 RETURN

13499 REM MOVE UP
13500 IF A = 160 OR A = 93 OR A = 95 OR A = 90 THEN Y = Y - 1 : GOSUB 300
13559 REM REVEAL OPENED ROOM UP
13560 IF A = 255 THEN GOTO 13850
13599 REM OPEN DOOR UP
13600 IF A = 94 THEN GOSUB 13960
13698 REM BLOCKED UP
13700 IF A <> 160 AND A <> 93 AND A <> 95 AND A <> 90 OR (A = 92 AND Y<>19 AND Y<>15 AND Y<>11 AND Y<>7 AND Y<>3) THEN Y = Y + 1 : GOSUB 300
13800 GOSUB 30500 : GOTO 10000
13849 REM REVEAL
13850 IF MAP(RX+1, RY+1) = 5 THEN MAP(RX+1, RY+1) = 2 : GOSUB 30500
13855 IF MAP(RX+1, RY+1) = 7 THEN MAP(RX+1, RY+1) = 9 : GOSUB 30500
13860 IF MAP(RX+1, RY+1) = 8 THEN MAP(RX+1, RY+1) = 4 : GOSUB 30500
13865 RY = RY - 1 : VISIBLES(RX+1, RY+1) = 2 : A = 160 : A$ = " " : XX = RX * RW : YY = RY * RH : X1 = RX+1 : Y1 = RY+1
13870 GOSUB 16000 : IF RX < SIZE-1 THEN GOSUB 13920
13900 GOTO 13800
13910 REM PLACE DOOR LEADING TO A ROOM ON THE RIGHT
13920 IF MAP(RX+2, RY+1) = 3 OR MAP(RX+2, RY+1) = 4 OR MAP(RX+2, RY+1) = 8 THEN VTAB(RY*RH+3) : HTAB((RX+1)*RW-1) : ? " ";M$;"\\\\";N$;
13930 IF MAP(RX+2, RY+1) = 6 OR MAP(RX+2, RY+1) = 7 OR MAP(RX+2, RY+1) = 9 THEN VTAB(RY*RH+3) : HTAB((RX+1)*RW) : ? M$;"^";N$;MI$;" ";NI$;
13940 RETURN
13950 REM OPEN
13960 VISIBLES(RX+1,RY) = 1 : XX = RX * RW : YY = (RY-1) * RH : X1 = RX+1 : Y1 = RY
13970 RZ = 1 : GOSUB 16000 : VTAB(Y) : HTAB(X-3) : ? M$;"\\\\_";N$;" ";M$;"Z\\\\";N$; : VTAB(Y-1) : HTAB(X-1) : ? CHR$(127);CHR$(127);CHR$(127);
13980 RETURN

13999 REM MOVE DOWN
14000 IF A = 160 OR A = 93 OR A = 95 OR A = 90 THEN Y = Y + 1 : GOSUB 300
14099 REM REVEAL OPENED ROOM DOWN
14100 IF A = 255 THEN GOTO 14350
14149 REM OPEN DOOR DOWN
14150 IF A = 94 THEN GOSUB 14460
14199 REM BLOCKED DOWN
14200 IF A <> 160 AND A <> 93 AND A <> 95 AND A <> 90 OR (A = 92 AND Y<>19 AND Y<>15 AND Y<>11 AND Y<>7 AND Y<>3) THEN Y = Y - 1 : GOSUB 300
14300 GOSUB 30500 : GOTO 10000
14349 REM REVEAL
14350 IF MAP(RX+1, RY+2) = 5 THEN MAP(RX+1, RY+2) = 2 : GOSUB 30500
14355 IF MAP(RX+1, RY+2) = 7 THEN MAP(RX+1, RY+2) = 9 : GOSUB 30500
14360 IF MAP(RX+1, RY+2) = 8 THEN MAP(RX+1, RY+2) = 4 : GOSUB 30500
14365 RY = RY + 1 : VISIBLES(RX+1, RY+1) = 2 : A = 160 : A$ = " " : XX = RX * RW : YY = RY * RH : X1 = RX+1 : Y1 = RY+1 : GOSUB 16000 : GOTO 14300
14370 GOSUB 16000 : IF RY < SIZE-1 THEN GOSUB 14410
14375 IF RX < SIZE-1 THEN GOSUB 14390
14380 GOTO 14300
14385 REM PLACE DOOR LEADING TO A ROOM ON THE RIGHT
14390 IF MAP(RX+2, RY+1) = 3 OR MAP(RX+2, RY+1) = 4 OR MAP(RX+2, RY+1) = 8 THEN VTAB(RY*RH+3) : HTAB((RX+1)*RW-1) : ? " ";M$;"\\\\";N$;
14400 IF MAP(RX+2, RY+1) = 6 OR MAP(RX+2, RY+1) = 7 OR MAP(RX+2, RY+1) = 9 THEN VTAB(RY*RH+3) : HTAB((RX+1)*RW) : ? M$;"^";N$;MI$;" ";NI$;
14409 REM PLACE DOOR LEADING TO A ROOM BELOW
14410 IF MAP(RX+1, RY+2) = 3 OR MAP(RX+1, RY+2) = 4 OR MAP(RX+1, RY+2) = 8 THEN VTAB(RY*RH+3) : HTAB((RX+1)*RW-1) : ? " ";M$;"\\\\";N$;
14420 IF MAP(RX+1, RY+2) = 6 OR MAP(RX+1, RY+2) = 7 OR MAP(RX+1, RY+2) = 9 THEN VTAB(RY*RH+3) : HTAB((RX+1)*RW) : ? M$;"^";N$;MI$;" ";NI$;
14440 RETURN
14450 REM OPEN
14460 VISIBLES(RX+1,RY+2) = 1 : XX = RX * RW : YY = (RY+1) * RH : X1 = RX+1 : Y1 = RY+2 : REM GOSUB 16000 : VTAB(Y+3) : HTAB(X-3) : ? M$;"\\\\_";N$;" ";M$;"Z\\\\";N$; : VTAB(Y+1) : HTAB(X-1) : ? CHR$(127);CHR$(127);CHR$(127);
14470 RZ = 1 : GOSUB 16000 : VTAB(Y) : HTAB(X-3) : ? M$;"\\\\_";N$;" ";M$;"Z\\\\";N$; : VTAB(Y+1) : HTAB(X-1) : ? CHR$(127);CHR$(127);CHR$(127);
14480 RETURN

14500 GOSUB 300 : REM SPACE
14510 GOSUB 30500
14600 GOTO 10000


15999 REM UPDATE A ROOM
16000 M = MAP(X1, Y1) : REM MAP(RX+1, RY+1)
16100 V = VISIBLES(X1, Y1) : REM VISIBLES(RX+1, RY+1)

16200 WW = XX+1 : GOSUB 200
16210 VTAB(YY+1)

16300 IF YY < 4 THEN GOTO 16500
16310 IF V > 1 AND Y1 > 1 AND VISIBLES(X1, Y1-1) = 0 THEN PRINT " _______ "; : GOTO 16500
16350 IF V > 1 THEN ? " ";M$;"\\\\\\\\\\\\\\";N$;" "; : REM DRAW IN BETWEEN ROOM VERTICAL SPACE
16499 REM IF V > 1 THEN ? " _______ "; : REM DRAW TOP EDGE BORDER OF THE FIRST RX ROOMS
16500 IF V = 1 THEN ? " _";M$;"I";N$;"_";M$;"I";N$;"_";M$;"I";N$;"_ "

16799 REM DRAW VISIBLE EMPTY ROOM
17000 IF V > 1 THEN WW = XX+1 : GOSUB 200 : VTAB(YY+2) : ? M$;"Z_";N$;"     ";M$;"Z_";N$
17020 IF V > 1 AND TURN = 0 THEN HTAB(XX+1) : VTAB(YY+3) : ? M$;"Z_";N$;" ";ROOMS$(INSIDES(X1, Y1)+1);"  ";M$;"Z_";N$ : GOTO 17100
17050 IF V > 1 THEN HTAB(XX+2) : VTAB(YY+3) : ? M$;"_";N$;" ";ROOMS$(INSIDES(X1, Y1)+1);"  ";M$;"Z";N$
17100 IF V > 1 THEN HTAB(XX+1) : VTAB(YY+4) : ? M$;"Z_";N$;"     ";M$;"Z_";N$

17110 REM VTAB(24) : ? MI$;XX;NI$;

17299 REM DRAW DISCOVERED ROOMS AS GREYED OUT IF THEY ARE NOT REVELAED OUT YET
17300 IF V = 1 THEN WW = XX+1 : GOSUB 200 : VTAB(YY+2) : ? M$;"ZVWVWVWV_";N$
17310 IF V = 1 THEN HTAB(XX+1) : VTAB(YY+3) : ? M$;"ZVWVWVWV_";N$
17320 IF V = 1 THEN HTAB(XX+1) : VTAB(YY+4) : ? M$;"ZVWVWVWV_";N$

17999 REM DRAW DOORS
18000 IF V = 0 GOTO 19600
18100 IF RZ = 1 THEN RZ = 0 : GOTO 19600

18299 REM HORIZONTAL OPEN DOORS
18300 IF M <> 3 AND M <> 4 AND M <> 8 THEN GOTO 18800
18350 REM IF RX < SIZE THEN GOTO 18800
18400 IF V > 1 AND ZX = -1 THEN HTAB(XX-1) : VTAB(YY+3) : ? CHR$(127);M$;"\\\\";N$;" "
18500 IF V > 1 AND ZX = 1 THEN HTAB(XX-1) : VTAB(YY+3) : ? " ";M$;"\\\\";N$;CHR$(127)

18799 REM HORIZONTAL CLOSED DOORS
18800 IF M <> 6 AND M <> 7 AND M <> 9 THEN GOTO 19300
18850 REM IF RX < SIZE THEN GOTO 19300
18900 REM IF VISIBLES(RX+1, RY+1) > 0 THEN HTAB(XX-1) : VTAB(YY+3) : ? M$;"Z";N$
19000 REM IF VISIBLES(RX+1, RY+2) > 0 THEN HTAB(XX+2) : VTAB(YY+3) : ? M$;"_";N$
19100 HTAB(XX) : VTAB(YY+3) : ? M$;" ^";N$


19299 REM VERTICAL OPEN DOOR
19300 IF M <> 2 AND M <> 4 AND M <> 9 THEN GOTO 19500
19305 IF V < 2 THEN GOTO 19320
19310 IF M = 2 OR M = 4 OR M = 9 THEN HTAB(XX+2) : VTAB(YY+1) : ? M$;"\\\\";CHR$(95);N$" ";M$;CHR$(90);"\\\\";N$ : GOTO 19500
19320 HTAB(XX+2) : VTAB(YY+1) : ? "_";M$;"I";N$;"_";M$;"I";N$;"_";M$;"I";N$;"_"


19499 REM VERTICAL CLOSED DOOR
19500 IF M <> 5 AND M <> 7 AND M <> 8 THEN GOTO 19600
19510 IF M = 5 OR M = 7 OR M = 8 THEN HTAB(XX+2) : VTAB(YY+1) : ? "__";M$;" ^ ";N$;"__"


19599 REM DRAW BOTTOM EDGE BORDER OF THE ROOM
19600 HTAB(XX+1) : VTAB(YY+5) : REM VTAB(1) : HTAB(1) : ? Y1, VISIBLES(X1, Y1+1) : 
19700 IF Y1 < SIZE THEN GOTO 19850
19800 IF V > 0 THEN ? " ";M$;"LLLLLLL";N$;" " : RETURN
19825 RETURN
19850 IF VISIBLES(X1, Y1+1) > 0 AND (MAP(X1, Y1+1) = 2 OR MAP(X1, Y1+1) = 4 OR MAP(X1, Y1+1) = 9) THEN ? " ";M$;"\\\\_";N$;" ";M$;"Z\\\\";N$;" " : RETURN
19860 IF VISIBLES(X1, Y1+1) > 0 AND (MAP(X1, Y1+1) = 5 OR MAP(X1, Y1+1) = 7 OR MAP(X1, Y1+1) = 8) THEN ? " ";M$;"\\\\";N$;MI$;" ";NI$;M$;"^";N$;MI$;" ";NI$;M$;"\\\\";N$;" " : RETURN
19900 IF VISIBLES(X1, Y1) > 0 AND VISIBLES(X1, Y1 + 1) = 0 THEN ? " ";M$;"LLLLLLL";N$;" " : RETURN
19910 IF VISIBLES(X1, Y1) > 0 THEN ? " ";M$;"\\\\\\\\\\\\\\";N$;" "
19920 RETURN


19999 REM GET PLAYER DATA FROM MEMORY
20000 CLASS = PEEK(1020) : REM PLAYER CLASS
20110 REM ? PEEK(1019) : REM ??
20120 AK = PEEK(1018) : REM ATTACK
20130 AC = PEEK(1017) : REM ARMOR CLASS
20140 SR = PEEK(1016) : REM STRENGTH
20150 DX = PEEK(1015) : REM DEXTERITY
20160 IT = PEEK(1014) : REM INTELLIGENCE
20170 WI = PEEK(1013) : REM WISDOM
20180 HP = PEEK(1012) : REM HEALTH
20190 MP = PEEK(1011) : REM MANA
20200 AM = PEEK(1010) : REM AMMO
20210 GOLD = PEEK(1009) : REM GOLD
20220 EX = PEEK(1008) : REM EXPERIENCE

20400 IF CLASS = 1 THEN ITEMS$(1, 1) = "Bronze Sword" : ITEMS$(1, 2) = "Iron Sword" : ITEMS$(1, 3) = "Mithril Sword" : ITEMS$(1, 4) = "Unidentified"
20422 IF CLASS = 1 THEN ITEMS$(2, 1) = "Wooden Shield" : ITEMS$(2, 2) = "Iron Shield" : ITEMS$(2, 3) = "Mithril Shield" : ITEMS$(2, 4) = "Unidentified"
20424 IF CLASS = 1 THEN ITEMS$(3, 1) = "Leather Armor" : ITEMS$(3, 2) = "Chain Mail" : ITEMS$(3, 3) = "Plate Mail" : ITEMS$(3, 4) = "Unidentified"
20426 IF CLASS = 1 THEN ITEMS$(4, 1) = "Bronze Helm" : ITEMS$(4, 2) = "Iron Helm" : ITEMS$(4, 3) = "Mithril Helm" : ITEMS$(4, 4) = "Unidentified"
20428 IF CLASS = 1 THEN ITEMS$(5, 1) = "Bracer" : ITEMS$(5, 2) = "Ring" : ITEMS$(5, 3) = "Amulet" : ITEMS$(5, 4) = "Unidentified"

20430 IF CLASS = 2 THEN ITEMS$(1, 1) = "Bronze Dagger" : ITEMS$(1, 2) = "Iron Sword" : ITEMS$(1, 3) = "Mithril Sword" : ITEMS$(1, 4) = "Unidentified"
20432 IF CLASS = 2 THEN ITEMS$(2, 1) = "Shortbow" : ITEMS$(2, 2) = "Iron Shield" : ITEMS$(2, 3) = "Mithril Shield" : ITEMS$(2, 4) = "Unidentified"
20434 IF CLASS = 2 THEN ITEMS$(3, 1) = "Leather Vest" : ITEMS$(3, 2) = "Chain Mail" : ITEMS$(3, 3) = "Plate Mail" : ITEMS$(3, 4) = "Unidentified"
20436 IF CLASS = 2 THEN ITEMS$(4, 1) = "Ranger Hood" : ITEMS$(4, 2) = "Iron Helm" : ITEMS$(4, 3) = "Mithril Helm" : ITEMS$(4, 4) = "Unidentified"
20438 IF CLASS = 2 THEN ITEMS$(5, 1) = "Amulet" : ITEMS$(5, 2) = "Ring" : ITEMS$(5, 3) = "Bracelet" : ITEMS$(5, 4) = "Unidentified"

20440 IF CLASS = 3 THEN ITEMS$(1, 1) = "Quarterstaff" : ITEMS$(1, 2) = "Iron Sword" : ITEMS$(1, 3) = "Mithril Sword" : ITEMS$(1, 4) = "Unidentified"
20442 IF CLASS = 3 THEN ITEMS$(2, 1) = "Spellbook" : ITEMS$(2, 2) = "Iron Shield" : ITEMS$(2, 3) = "Mithril Shield" : ITEMS$(2, 4) = "Unidentified"
20444 IF CLASS = 3 THEN ITEMS$(3, 1) = "Cloth Robe" : ITEMS$(3, 2) = "Chain Mail" : ITEMS$(3, 3) = "Plate Mail" : ITEMS$(3, 4) = "Unidentified"
20446 IF CLASS = 3 THEN ITEMS$(4, 1) = "Wizard Hat" : ITEMS$(4, 2) = "Iron Helm" : ITEMS$(4, 3) = "Mithril Helm" : ITEMS$(4, 4) = "Unidentified"
20448 IF CLASS = 3 THEN ITEMS$(5, 1) = "Ring" : ITEMS$(5, 2) = "Amulet" : ITEMS$(5, 3) = "Bracelet" : ITEMS$(5, 4) = "Unidentified"
20490 RETURN


20499 REM READ MAP DATA FROM MEMORY
20500 FOR I = SIZE TO 1 STEP -1
20520   FOR J = SIZE TO 1 STEP -1
20525     K = ((I - 1) * SIZE + J - 1)
20540     MAP(I, J) = PEEK(948 - K)
20550     VISIBLES(I, J) = PEEK(974 - K)
20560     INSIDES(I, J) = PEEK(1000 - K)
20650   NEXT J
20660 NEXT I
20670 RETURN



20999 REM DISPLAY PLAYER STATS
21000 VTAB(1) : HTAB(61) : PRINT MI$;CLASSES$(CLASS);NI$
21010 VTAB(3) : HTAB(51) : PRINT "HP: ";HP;"/";HP;"   Str: ";SR;"   Att: ";AK;" "
21030 VTAB(5) : HTAB(51) : PRINT "MP: ";MP;"/";MP;"     Dex: ";DX;"   AC: +";AC;" "
21040 VTAB(7) : HTAB(63) : PRINT "Int: ";IT;"   Wis: ";WI;" "; : HTAB(51)
21045 IF CLASS = 1 THEN PRINT "Block: ";AM;" "
21050 IF CLASS = 2 THEN PRINT "Arrows: ";AM;" "
21055 IF CLASS = 3 THEN PRINT "Spells: ";AM;" "

21060 REM VTAB(7) : HTAB(57) : PRINT GOLD;"   "
21066 REM VTAB(7) : HTAB(68) : PRINT EX;"/100    "
21070 REM VTAB(12) : HTAB(50) : PRINT ITEMS$(1,1);M$;"_";N$; : VTAB(13) : HTAB(50) : PRINT ITEMS$(1,2);M$;"_";N$;
21080 REM VTAB(12) : HTAB(60) : PRINT ITEMS$(2,1);M$;"_";N$; : VTAB(13) : HTAB(60) : PRINT ITEMS$(2,2);M$;"_";N$;
21090 REM VTAB(12) : HTAB(70) : PRINT ITEMS$(3,1); : VTAB(13) : HTAB(70) : PRINT ITEMS$(3,2);
21190 RETURN


21999 REM DRAW ALL MAP ROOMS ROUTINE XX = RX * RW : YY = (RY+1) * RH : X1 = RX+1 : Y1 = RY+2
22000 FOR RY = 0 TO 4
22100   FOR RX = 0 TO 4
22200     REM CALCULATE THE X AND Y COORDINATES OF THE TOP LEFT CORNER OF THE ROOM
22300     XX = RX * RW
22400     YY = RY * RH
22420     X1 = RX+1
22440     Y1 = RY+1
22500     REM DRAW A ROOM AT THE CURRENT POSITION
22600     GOSUB 16000
22700   NEXT RX
22800 NEXT RY
22900 RETURN


22999 REM SET SCROLL WINDOW
23000 POKE 32,V1 : REM SCROLL X
23010 POKE 33,V2 : REM SCROLL WIDTH
23020 POKE 34,V3 : REM SCROLL Y
23030 POKE 35,V4 : REM SCROLL HEIGHT
23040 RETURN

23099 REM RESET SCROLL WINDOW
23100 POKE 32,0 : REM SCROLL X
23110 POKE 33,80 : REM SCROLL WIDTH
23120 POKE 34,0 : REM SCROLL Y
23130 POKE 35,24 : REM SCROLL HEIGHT
23140 RETURN


23999 REM DEBUG LINE AT THE BOTTOM
24000 IF DEBUG = 0 OR X = 0 THEN RETURN
24005 REM HTAB(1) : VTAB(24) : ? MI$;XX;NI$;
24010 HTAB(4) : VTAB(24) : ? MI$;" cursor: ";X;"x";Y;NI$;M$;"N";N$;MI$;" PLR symbol: ";A;
24020 IF A < 10 THEN PRINT "   ";NI$; : GOTO 24050
24030 IF A < 100 THEN PRINT "  ";NI$; : GOTO 24050
24040 PRINT " ";NI$;
24050 HTAB(36) : VTAB(24) : PRINT M$;"V";N$;A$;M$;"V";N$;MI$;" ";NI$;
24060 HTAB(40) : VTAB(24) : PRINT M$;"N";N$;MI$"  key:";
24062 IF KY < 10 THEN PRINT " ";KY;"   ";NI$; : GOTO 24070
24064 IF KY < 100 THEN PRINT " ";KY;"  ";NI$; : GOTO 24070
24066 PRINT " ";KY;" ";NI$;
24070 HTAB(52) : VTAB(24) : PRINT M$"N";N$;MI$;" DEBUG";NI$;M$;"N";N$;MI$;"  ";NI$;
24080 GOSUB 280 : REM FRE
24100 RETURN


25999 REM LOAD DOUBLE HI-RES PICTURE
26000 POKE 49237,0: PRINT D$;"BLOAD ";FF$;", A$2000, L$2000"
26010 POKE 49236,0: PRINT D$;"BLOAD ";FF$;", A$2000, L$2000, B$2000"
26020 RETURN


30499 REM DEBUG PRINT MAZE
30500 IF DEBUG < 1 THEN GOTO 30670
30535 FOR YY = 1 TO SIZE
30540    FOR XX = 1 TO SIZE
30545       HTAB(57 + XX) : VTAB(15 + YY) : O = 1 : IF XX = 1 THEN ? CHR$(8);MI$;" ";NI$;
30565       IF MAP(XX, YY) = 0 OR O > 0 THEN INVERSE : PRINT MAP(XX, YY) : NORMAL : GOTO 30575
30570       PRINT MAP(XX, YY)
30575    NEXT XX
30580 NEXT YY
30585 FOR YY = 1 TO SIZE
30590    FOR XX = 1 TO SIZE
30595       HTAB(64 + XX) : VTAB(15 + YY) : IF XX = 1 THEN PRINT CHR$(8);CHR$(8);M$;"N";N$;MI$;" ";NI$;
30600       IF X = XX AND Y = YY THEN PRINT MI$;VISIBLES(XX, YY);NI$; : NORMAL : GOTO 30610
30605       PRINT VISIBLES(XX, YY);M$;"N";N$;MI$;" ";NI$;
30610    NEXT XX
30615 NEXT YY
30670 RETURN


59999 REM ERROR HANDLING
60000 ER = PEEK(222)
60005 IF ER = 0 OR ER > 15 THEN PRINT : PRINT : CALL 826
60020 IF ER <> 2 AND ER <> 3 AND ER <> 8 AND ER <> 11 THEN PRINT " ERROR!";
60030 PRINT CHR$(7);" in line ";PEEK(218) + PEEK(219) * 256
60050 ? : REM TRACE VARIABLES
60060 REM PRINT AA$;" ";STACK;" ";XX;"*";YY;" ";X;"*";Y;" U:";INT(RU*10)/10;" R:";INT(RR*10)/10;" D:";INT(RD*10)/10;" L:";INT(RL*10)/10
60090 END
