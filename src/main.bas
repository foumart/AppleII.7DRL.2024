100 REM RL ENGINE FOR APPLE II BY FOUMARTGAMES
200 REM ======================================
300 REM READCHAR ROUTINE SRC:
400 REM https://www.1000bit.it/support/manuali/apple/technotes/misc/tn.misc.10.html
500 REM ==============
600 REM INITIALIZATION
640 REM LOMEM: 24576
680 REM HIMEM: 8192
690 REM 38399 : 24576 : 16384 : 8192
700 ONERR GOTO 30000
800 REM TEXT

850 D$ = CHR$(4) : AVAIL = FRE(0) : REM 26886
950 MI$ = CHR$(15) : REM TURN INVERSE ON
960 NI$ = CHR$(14) : REM TURN INVERSE OFF
1000 M$ = CHR$(27) + MI$ : REM TURN SPECIAL CHARACTERS ON (80COL MOUSE TEXT CARD CHARS)
1100 N$ = CHR$(24) + NI$ : REM TURN SPECIAL CHARACTERS OFF
1900 ST$ = "" : REM GENERIC STRING, USED WHEN CENTERING TEXT
 
2000 W = 3 : REM NUMBER OF TEXT FILES TO LOAD
2020 Z = 11 : REM THE NUMBER OF TEXT LINES EACH FILE HAS
2030 I = 1 : J = 1 : LO$ = N$+M$+"WV"+N$ : OFFSET = 20
2050 DIM FILES$(W) : FILES$(1) = "Encounter" : FILES$(2) = "BattleWin" : FILES$(3) = "BeginGame" : REM FILES$(3) = "EndScreen"
2060 DIM COODS(W, 3) : REM WILL HOLD ALL UI PARAMETTERS: L, H, V
2080 DIM LINES$(W, Z) : REM WILL HOLD ALL UI DISPLAYS

2200 I = 1 : REM CLEAR PROGRESS BAR FOR NEW READING/BUFFERING DISPLAY
2250 HTAB(OFFSET) : VTAB(22) : PRINT "_";
2300 HTAB(OFFSET) : VTAB(23) : PRINT M$;"C";N$;" ";FILES$(J);
2350 HTAB(OFFSET + 14)
2400 FOR P = 1 TO Z * 2 + 3
2420 PRINT M$;"\\";N$;
2440 NEXT P

2800 TEXT : VTAB(23) : HTAB(62) : PRINT D$;"OPEN ";FILES$(J)
2900 HTAB(62) : PRINT D$;"READ ";FILES$(J)
3000 HTAB(62) : INPUT L : REM GET THE TOTAL LINES OF THE TEXT FILE (FIRST PARAMETER FROM TEXT FILE)
3050 COODS(J, 1) = L
3100 HTAB(OFFSET + 14) : PRINT M$;"VW";N$;
3125 HTAB(62) : INPUT H : REM GET LEFT OFFSET WHEN INSERTING THE TEXT (SECOND PARAMETER FROM TEXT FILE)
3150 COODS(J, 2) = H
3175 HTAB(OFFSET + 15) : PRINT M$;"WV";N$;
3200 HTAB(62) : INPUT V : REM GET TOP OFFSET WHEN INSERTING THE TEXT (THIRD PARAMETER FROM TEXT FILE)
3250 COODS(J, 3) = V

3300 HTAB(OFFSET + 15 + I * 2) : PRINT M$;LO$;N$;
3350 HTAB(62) : INPUT A$ : REM GET THE NEXT DATA ROW
3400 LINES$(J, I) = A$ : I = I + 1 : REM SAVE IT AS NEW LINE
3500 IF I > COODS(J, 1) THEN GOTO 3700
3600 GOTO 3300 : REM READING LINES LOOP
3700 HTAB(62) : PRINT D$;"CLOSE"

3750 REM CONVERTING THE DATA
3800 REM UPDATING THE DATA IN PLACE
3900 HTAB(OFFSET) : VTAB(22)
3950 PRINT M$;"I";N$ : HTAB(OFFSET) : PRINT M$;"C";N$;" ";FILES$(J);M$;
4400 HTAB(OFFSET + 14)
4500 PRINT M$;" ";N$;

4600 FOR I = 1 TO COODS(J, 1)
4700   NE$ = ""
4800   A$ = LINES$(J, I) : M = LEN(A$) : D = 1
4900   FOR XI = 1 TO M
5000     B$ = MID$(A$, XI, 1)
5100     C = ASC(B$)
5150     IF XI = 10 THEN PRINT M$;" ";N$; : REM PROGRESS DISPLAY
5200     IF C = 123 THEN NE$ = NE$ + M$ : GOTO 6000 : REM TURN MOUSE TEXT ON WITH TRIGGER: "{"
5300     IF C = 125 THEN NE$ = NE$ + N$ : GOTO 6000 : REM TURN MOUSE TEXT OFF WITH TRIGGER: "}"
5400     IF C = 91 THEN NE$ = NE$ + MI$ : GOTO 6000 : REM TURN INVERSE ON WITH TRIGGER: "["
5500     IF C = 93 THEN NE$ = NE$ + NI$ : GOTO 6000 : REM TURN INVERSE OFF WITH TRIGGER: "]"
5600     REM IF C = 59 THEN NE$ = NE$ + "\\" : GOTO 6000 : REM TYPE IN BETWEEN VERTICAL SPACE WITH TRIGGER: ";"
5650     IF C = 59 THEN NE$ = NE$ + ":" : GOTO 6000 : REM TYPE TWO DOTS PUNCTUATION ":" WITH TRIGGER: ";"
5700     IF C = 96 THEN NE$ = NE$ + "." : GOTO 6000 : REM TYPE A PERIOD "." WITH TRIGGER: "`"
5800     IF C < 125 THEN NE$ = NE$ + B$ : REM WILL PRINT THE REQUESTED LETTER
5900     REM IF C = 126 THEN NE$ = NE$ + "@" : GOTO 6000 : REM TYPE A PERIOD "?" WITH TRIGGER: "~"
6000   NEXT XI
6100   LINES$(J, I) = NE$
6150   PRINT M$;" ";N$; : REM PROGRESS DISPLAY
6200 NEXT I
6300 PRINT M$;"  ";N$;
6320 J = J + 1 : IF J < W + 1 THEN GOTO 2200

6340 HTAB(OFFSET) : VTAB(22) : CALL -958 : REM CLEAR TEXT FROM CURSOR TO BOTTOM OF WINDOW


6400 REM PRINT D$"BLOAD READCHAR" : REM : FIX MEMORY ISSUES
6420 W = 3 : GOSUB 25000 : REM DRAW BEGIN JOURNEY WINDOW
6440 W1 = RND(-2)
6450 AVAIL = FRE(0) : REM 24948
6460 PRINT D$"BLOAD READCHAR"
6480 VTAB(20) : HTAB(52) : REM DIM SEED%(10)
6510 REM DECLARE AN ARRAY OF 10 ELEMENTS
6520 DIM N1%(10) : DIM N2%(15)
6530 REM FILL THE ARRAY WITH THE NUMBERS 0 TO 9 IN ORDER
6540 FOR I = 1 TO 10 : N1%(I) = I - 1 : NEXT I
6550 FOR I = 1 TO 15 : N2%(I) = I - 1 : NEXT I
6570 REM SHUFFLE THE ARRAY USING RANDOM SWAPS
6580 FOR I = 1 TO 10
6590   REM GENERATE A RANDOM N1%BER BETWEEN 1 AND 10
6600   N = INT(RND(1) * 10) + 1
6610   REM SWAP THE ELEMENT AT THE CURRENT INDEX WITH THE ELEMENT AT THE RANDOM INDEX
6620   T = N1%(I)
6630   N1%(I) = N1%(N)
6640   N1%(N) = T
6650 NEXT I
6660 REM PRINT THE ARRAY ELEMENTS
6670 FOR I = 1 TO 10
6680  PRINT N1%(I);
6690 NEXT I

6700 FOR I = 1 TO 15
6710   R = INT(RND(1) * 32) + 1
6715   FOR J = 1 TO I - 1
6720     IF R = N2%(J) THEN GOTO 6710
6725   NEXT J
6730   N2%(I) = R
6735 NEXT I
6740 FOR I = 1 TO 15
6745  PRINT CHR$(63 + N2%(I));
6750 NEXT I


6760 AVAIL = FRE(0) : REM 24832
6790 POKE 49168,0
6800 IF PEEK (49152) = 0 THEN GOTO 6800
6850 IF PEEK (49152) = 141 THEN GOTO 7000
6900 GOTO 6800

7000 REM FIX MOUSE TEXT AND INVERSE ISSUES
7010 MX = 0 : MY = 0 : REM MAP ROOMS COORDINATES
7020 RW = 9 : RH = 4 : REM ROOM SIZE
7030 X = 23 : Y = 19 : REM INITIAL PLAYER POSITION
7040 A = 160 : REM HOLDS THE MAP TILE PLAYER IS CURRENTLY ON READ BY THE READCHAR ROUTINE.
7050 DIM PLAYER(3) : REM HOLDS X, Y, AND THE MAP CHARACTER THAT'S BEHIND THE UNIT
7060 PLAYER(1) = X : PLAYER(2) = Y : PLAYER(3) = A
7070 A$ = CHR$(160) : REM THE CHARACTER CODE READ BY THE ROUTINE BUT AS STRING

7100 REM 
7200 DIM ROOMS$(4)
7300 ROOMS$(1) = "  "
7400 ROOMS$(2) = " "+M$+CHR$(93)+N$
7500 ROOMS$(3) = M$+CHR$(90)+CHR$(94)+N$
7600 ROOMS$(4) = " "+M$+CHR$(91)+N$

7700 REM GENERATE MAP CONNECTIONS ARRAY
7800 DIM MAP(5, 5)
7900 DATA 0,0,5,0,0,0,0,5,0,0,0,0,7,0,0,0,0,5,3,0,0,0,9,0,0
8000 FOR I = 0 TO 4
8100   FOR J = 0 TO 4
8200     READ MAP(I,J)
8300   NEXT J
8400 NEXT I

8500 REM GENERATE MAP CONTENTS ARRAY
8600 DIM INSIDES(5, 5)
8700 DATA 0,0,2,0,0,0,0,0,0,0,0,0,3,0,0,0,0,0,0,0,0,0,1,0,0
8800 FOR I = 0 TO 4
8900   FOR J = 0 TO 4
9000     READ INSIDES(I,J)
9100   NEXT J
9200 NEXT I

9300 REM GENERATE MAP VISITED ROOMS ARRAY
9400 DIM VISIBLES(5, 5)
9500 REM DATA 1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1
9600 DATA 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,1,0,0
9700 FOR I = 0 TO 4
9800   FOR J = 0 TO 4
9900     READ VISIBLES(I,J)
9920   NEXT J
9940 NEXT I

9950 GOSUB 20000 : GOSUB 15000

10000 REM MAIN LOOP
10010 REM FOR II=1 TO 200: NEXT II : REM WAIT 49200,3
10020 REM IF PLAYER(1) = X AND PLAYER(2) = Y THEN GOTO 550 : REM SKIP IF PLAYER HAS NOT MOVED
10030 PLAYER(1) = X : PLAYER(2) = Y : PLAYER(3) = A
10700 HTAB(X) : VTAB(Y) : ? N$;"@" : REM DRAW PLAYER
10800 IF K > 0 AND PEEK(-16384) > 0 THEN 10000
10900 K = 0
11000 IF PEEK(-16384) = 0 THEN 10000
11100 K = PEEK(-16384)
11200 REM POKE-16336,0 : REM CLEARS KEYBOARD STROBE - ALWAYS AFTER READING KEYBOARD
11300 VTAB(23) : ? N$;"keycode: ";K;"  "; : REM DEBUG DISPLAY OF CHAR CODE KEY PRESSED

11400 REM DISPLAY THE MAP CHAR AT THE PLAYER'S PREVIOUS POSITION AND PERFORM MOVE
11500 HTAB(X) : VTAB(Y)
11600 GOSUB 21200
11700 PRINT AA$
11800 IF K = 149 OR K = 225 OR K = 196 THEN GOTO 12500 : REM RIGHT
11900 IF K = 136 OR K = 234 OR K = 202 THEN GOTO 12900 : REM LEFT
12000 IF K = 139 OR K = 247 OR K = 215 THEN GOTO 13400 : REM UP
12100 IF K = 138 OR K = 243 OR K = 211 THEN GOTO 14000 : REM DOWN
12200 IF K = 160 THEN GOTO 14400

12300 GOTO 10000

12400 REM LIMIT MOVEMENT
12500 IF A = 160 OR A = 93 OR A = 95 OR A = 90 OR A = 92 THEN X = X + 1 : GOSUB 15000
12600 IF A = 94 THEN VTAB(Y) : HTAB(X+1) : ? M$;"\\\\"; : MX = 1 : MY = 4 : GOSUB 16000 : REM TODO: FIX HARDCODED STUFF
12700 IF A <> 160 AND A <> 93 AND A <> 90 AND (A <> 92 OR A = 92 AND Y<>19 AND Y<>15 AND Y<>11 AND Y<>7 AND Y<>3) THEN X = X - 1 : GOSUB 15000
12800 GOTO 10000

12900 IF A = 160 OR A = 93 OR A = 95 OR A = 90 OR A = 92 THEN X = X - 1 : GOSUB 15000
13000 REM TODO: FIX HARDCODED STUFF AROUND DOORS OPENING 7AND ROOM REVEALING
13100 IF A = 94 THEN ROW = 4 : COL = 1 : VISIBLES(4,1) = 2 : VTAB(Y) : HTAB(X-1) : MX = X-10 : MY = Y-3 : GOSUB 16000 : VTAB(Y) : HTAB(X-2) : ? N$;" ";M$;"\\\\";N$;" ";M$;
13200 IF A <> 160 AND A <> 93 AND A <> 95 AND (A <> 92 OR A = 92 AND Y<>19 AND Y<>15 AND Y<>11 AND Y<>7 AND Y<>3) THEN X = X + 1 : GOSUB 15000
13300 GOTO 10000

13400 IF A = 92 THEN GOTO 10000
13500 IF A = 160 OR A = 93 OR A = 95 OR A = 90 THEN Y = Y - 1 : GOSUB 15000
13600 IF A = 94 THEN ROW = 2 : COL = 2 : VISIBLES(2,2) = 2 : VTAB(Y-1) : HTAB(X) : MX = X-5 : MY = Y-5 : GOSUB 16000 : VTAB(Y) : HTAB(X-1) : ? M$;"_";N$;" ";M$;"Z";M$;
13700 REM IF A = 94 THEN VTAB(Y) : HTAB(X-1) : ? M$;"Z";N$;" ";M$;"_"; : MX = 1 : MY = 4 : GOSUB 1000 : REM TODO: FIX HARDCODED STUFF
13800 IF A <> 160 AND A <> 93 AND A <> 95 AND A <> 90 OR (A = 92 AND Y<>19 AND Y<>15 AND Y<>11 AND Y<>7 AND Y<>3) THEN Y = Y + 1 : GOSUB 15000
13900 GOTO 10000

14000 IF A = 92 THEN GOTO 10000
14100 IF A = 160 OR A = 93 OR A = 95 OR A = 90 THEN Y = Y + 1 : GOSUB 15000
14200 IF A <> 160 AND A <> 93 AND A <> 95 AND A <> 90 OR (A = 92 AND Y<>19 AND Y<>15 AND Y<>11 AND Y<>7 AND Y<>3) THEN Y = Y - 1 : GOSUB 15000
14300 GOTO 10000

14400 GOSUB 15300
14500 GOTO 10000

15000 REM MAP CHARACTER READ ROUTINE
15005 REM PEEK(36) AND POS(0) ARE NOT WORKING IN 80 COL, SO BELOW WE ACCESS DIFFERENT ADDRESSES TO BE SURE
15010 POKE 1147,X : POKE 1403,X : POKE 36,X : REM POKE 1531,Y : POKE 37,Y
15020 P1 = PEEK (36)
15030 IF P1 = 0 THEN P1 = PEEK (1403)
15100 IF P1 = 0 THEN P1 = PEEK (1147)
15200 POKE 1403,P1-1 : POKE 1147,P1-1 : POKE 36,P1-1 : REM MAKE SURE WE HAVE THE CORRECT HORIZONTAL POSITION
15300 VTAB(Y)
15400 CALL 768: REM CALL THE GETCHAR ROUTINE LOADED AT $0300
15500 A = PEEK(6) : A$ = CHR$(A) : GOSUB 21200
15600 HTAB(1) : VTAB(23) : ? N$;"cursor: ";P1;"x";Y;"     PLAYER symbol: ";A;" (";AA$;")   "
15650 AVAIL = FRE(0) : ? AVAIL; : REM 24118 (NOT MOVED YET) : 24113 (MOVING IN) : 24111 (MOVING IN MOUSE TETXT)
15700 REM FOR II=1 TO 300: NEXT II
15800 RETURN

15900 ? CHR$(14) : END

16000 REM DRAW A ROOM
16100 ? CHR$(15);
16200 HTAB(MX+1) : VTAB(MY+1)

16300 IF MY < 4 THEN GOTO 16600
16400 ? N$;" ";M$;"\\\\\\\\\\\\\\";N$;" ";M$ : REM DRAW IN BETWEEN ROOM VERTICAL SPACE
16500 GOTO 16800
16600 ? N$;" _______ ";M$ : REM DRAW TOP EDGE BORDER OF THE FIRST ROW ROOMS

16700 REM DRAW EMPTY ROOM
16800 M = MAP(ROW, COL): V = VISIBLES(ROW, COL)
16900 IF V > 0 THEN HTAB(MX+1) : VTAB(MY+2) : ? "Z_";N$;"     ";M$;"Z_"
17000 IF V > 0 OR M <> 0 THEN HTAB(MX+1) : VTAB(MY+3) : ? "Z_";N$;" ";ROOMS$(INSIDES(ROW, COL)+1);"  ";M$;"Z_"
17100 IF V > 0 THEN HTAB(MX+1) : VTAB(MY+4) : ? "Z_";N$;"     ";M$;"Z_"

17200 REM GREYED OUT ROOMS
17300 IF V = 0 THEN HTAB(MX+1) : VTAB(MY+2) : ? "ZVWVWVWV_"
17400 IF V = 0 THEN HTAB(MX+1) : VTAB(MY+3) : ? "ZVWVWVWV_"
17500 IF V = 0 THEN HTAB(MX+1) : VTAB(MY+4) : ? "ZVWVWVWV_"

17600 REM TODO: EXPERIMENT WITH PARTIAL ROOM REVEAL (WHEN THERE ARE ENEMIES FOR EXAMPLE)
17700 REM IF V = 2 THEN HTAB(MX+1) : VTAB(MY+2) : ? "ZWVWVW";N$;"  ";M$;"_"
17800 REM IF V = 2 THEN HTAB(MX+1) : VTAB(MY+3) : ? "ZWVWV";N$;"   ";M$;"_"
17900 REM IF V = 2 THEN HTAB(MX+1) : VTAB(MY+4) : ? "ZWVWVW";N$;"  ";M$;"_"

18000 REM DRAW DOORS
18100 IF V = 0 GOTO 19600

18200 REM HORIZONTAL OPEN DOORS
18300 IF M <> 3 AND M <> 4 AND M <> 8 THEN GOTO 18800
18400 IF VISIBLES(ROW, COL-1) = 1 THEN HTAB(MX-1) : VTAB(MY+3) : ? N$;" ";M$
18500 HTAB(MX+2) : VTAB(MY+3) : ? N$;" ";M$
18600 HTAB(MX) : VTAB(MY+3) : ? "\\\\"

18700 REM HORIZONTAL CLOSED DOORS
18800 IF M <> 6 AND M <> 7 AND M <> 9 THEN GOTO 19300
18900 IF VISIBLES(ROW, COL-1) = 1 THEN HTAB(MX-1) : VTAB(MY+3) : ? "Z"
19000 IF VISIBLES(ROW, COL+1) = 1 THEN HTAB(MX+2) : VTAB(MY+3) : ? "_"
19100 HTAB(MX) : VTAB(MY+3) : ? " ^"

19200 REM VERTICAL OPEN DOOR
19300 IF M = 2 OR M = 4 OR M = 9 THEN HTAB(MX+4) : VTAB(MY+1) : ? CHR$(95);N$" ";M$;CHR$(90)

19400 REM VERTICAL CLOSED DOOR
19500 IF M = 5 OR M = 7 OR M = 8 THEN HTAB(MX+4) : VTAB(MY+1) : ? " ^ "

19600 REM
19700 IF MY < 15 THEN RETURN
19800 HTAB(MX+1) : VTAB(MY+5) : ? N$;" ";M$;"LLLLLLL";N$;" ";M$ : REM DRAW BOTTOM EDGE BORDER OF THE BOTTOM ROW ROOMS

19900 RETURN


20000 REM DRAW ALL MAP ROOMS ROUTINE
20100 FOR ROW = 0 TO 4
20200   FOR COL = 0 TO 4
20300     REM CALCULATE THE X AND Y COORDINATES OF THE TOP LEFT CORNER OF THE ROOM
20400     MX = (COL) * (RW)
20500     MY = (ROW) * (RH)
20600     REM DRAW A ROOM AT THE CURRENT POSITION
20700     GOSUB 16000
20800   NEXT COL
20900 NEXT ROW
21000 RETURN

21100 REM MAKE SURE WE DISPLAY THE PROPER CHARACTER
21200 IF A >= 160 THEN AA$ = N$ + A$ : RETURN
21300 AA$ = M$ + A$ + N$
21400 RETURN


21500 REM **************
21600 REM CENTER TEXT
21700 REM *************
21800 HTAB (80 - LEN( ST$ ))/2 : REM CENTERING ALGORITHM
21900 REM VTAB B
22000 PRINT ST$
22100 RETURN


25000 REM PRINTING THE DATA ON SCREEN 
25500 FOR I = 1 TO Z
25600    HTAB(COODS(W, 2)) : VTAB (COODS(W, 3) + I)
25700    ? LINES$(W, I);
25800 NEXT I
25900 RETURN

30000 PRINT N$;"error!";
