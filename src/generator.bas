0 REM SHOULD HAVE AT LEAST 14 BYTES HERE IN THE REM IN ORDER TO CONTAIN
5 REM THE MACHINE LANGUAGE STUFF FOR THE ONERR HANDLING
10 ONERR GOTO 10000
20 FOR I = 2054 TO 2067
30   READ K
40   POKE I,K: NEXT
50   REM POKE -22816,234 : POKE -22817,234 : REM ENABLE DOS ERROR MESSAGES
70   REM POKE -22802,234 : POKE -22803,234 : POKE 22804,234 : REM DISABLE CR/LF AFTER DOS ERROR MESSAGE
100 DATA 166,222,189,96,210,72,32,92,219,232,104,16,245,96

150 DEBUG = 1
200 DIM AVAILABLE(4) : AVAILABLE(1) = 0 : AVAILABLE(2) = 0 : AVAILABLE(3) = 0 : AVAILABLE(4) = 0 : REM 4 DIRECTIONS
250 SIZE = 5 : REM INITIALIZE MAZE DIMENSIONS
300 DIM MAP(SIZE,SIZE)
320 DIM VISIBLES(SIZE,SIZE)
340 DIM SX(SIZE*SIZE)
360 DIM SY(SIZE*SIZE)

380 STACK = 0
390 TYPE = 1

400 FOR Y = 1 TO SIZE
500    FOR X = 1 TO SIZE
600       MAP(X, Y) = 0
700       VISIBLES(X, Y) = 0
800    NEXT X
900 NEXT Y

910 HOME : PRINT "HIT" : PRINT "ANY" : PRINT "KEY"
920 FOR O = 768 TO 782 : READ P
930 POKE O,P : NEXT O : CALL 768 : Q = RND(-1*(PEEK(78)+256*PEEK(79)))
940 DATA 230,78,208,2,230,79,44,0,192,16,245,44,16,192,96

1000 REM GENERATE MAZE
1050 GOSUB 1200
1100 GOSUB 2000
1125 PRINT "REPEAT" : IF STACK > 0 THEN GOSUB 2500
1150 PRINT "COMPLETE"
1190 END





1200 REM DEBUG PRINT MAZE
1210 POKE 32,0 : REM SCROLL X
1220 POKE 33,39 : REM SCROLL WIDTH
1230 POKE 34,SIZE+1 : REM SCROLL Y
1240 POKE 35,24 : REM SCROLL HEIGHT
1250 FOR YY = 1 TO SIZE
1260    FOR XX = 1 TO SIZE
1270       HTAB(XX) : VTAB(YY) : O = 1
1272       FOR ZZ = 1 TO STACK
1274         IF XX = SX(ZZ) AND YY = SY(ZZ) THEN O = 0
1276       NEXT ZZ
1277       IF MAP(XX, YY) = 0 OR O > 0 THEN INVERSE : PRINT MAP(XX, YY) : NORMAL : GOTO 1280
1278       PRINT MAP(XX, YY)
1280    NEXT XX
1290 NEXT YY
1300 FOR YY = 1 TO SIZE
1310    FOR XX = 1 TO SIZE
1320       HTAB(XX+6) : VTAB(YY)
1322       IF X = XX AND Y = YY THEN FLASH : PRINT VISIBLES(XX, YY); : NORMAL : GOTO 1330
1325       PRINT VISIBLES(XX, YY);
1330    NEXT XX
1340 NEXT YY
1350 REM POKE 32,0 : REM SCROLL X
1360 REM POKE 33,40 : REM SCROLL WIDTH
1370 REM POKE 34,0 : REM SCROLL Y
1380 REM POKE 35,24 : REM SCROLL HEIGHT
1390 HTAB(13) : VTAB(1)
1394 IF STACK < 10 THEN PRINT "S:";STACK;"                 " : GOTO 1400
1396 PRINT ":";STACK;"                 "
1400 FOR YY = 2 TO 5
1404   HTAB(12) : VTAB(YY) : CALL -868
1408 NEXT YY
1450 FOR YY = 1 TO STACK
1460   HTAB(13+INT(YY/SIZE)*4) : VTAB(YY - INT(YY/SIZE)*SIZE + 1) : PRINT SX(YY);"*";SY(YY);"  "
1480 NEXT YY
1490 RETURN





1500 REM ADD A CELL TO STACK
1505 HTAB(34) : VTAB(1) : PRINT "X:";XX;"*";YY;
1508 ZZ = 0
1510 FOR II = 1 TO STACK
1520   IF SX(II) = XX AND SY(II) = YY THEN ZZ = 1
1530 NEXT II
1540 IF ZZ = 1 THEN VTAB(24) : HTAB(1) : PRINT AA$;" SKIP ";STACK;" [";XX;"*";YY;"]" : GOTO 1750
1600 STACK = STACK + 1 : VTAB(24) : HTAB(1)
1610 IF AA$ = "C" THEN PRINT AA$;" ADD> ";STACK;" [";XX;"*";YY;"]" : GOTO 1700
1630 IF RU > RR AND RU > RD AND RU > RL THEN PRINT AA$;" ADD> ";STACK;" [";XX;"*";YY;"] U:"; : INVERSE : PRINT INT(RU*10)/10; : NORMAL : PRINT " R:";INT(RR*10)/10;" D:";INT(RD*10)/10;" L:";INT(RL*10)/10
1650 IF RR > RU AND RR > RD AND RR > RL THEN PRINT AA$;" ADD> ";STACK;" [";XX;"*";YY;"] U:";INT(RU*10)/10;" R:"; : INVERSE : PRINT INT(RR*10)/10; : NORMAL : PRINT " D:";INT(RD*10)/10;" L:";INT(RL*10)/10
1670 IF RD > RU AND RD > RR AND RD > RL THEN PRINT AA$;" ADD> ";STACK;" [";XX;"*";YY;"] U:";INT(RU*10)/10;" R:";INT(RR*10)/10;" D:"; : INVERSE : PRINT INT(RD*10)/10; : NORMAL : PRINT " L:";INT(RL*10)/10
1690 IF RL > RU AND RL > RR AND RL > RD THEN PRINT AA$;" ADD> ";STACK;" [";XX;"*";YY;"] U:";INT(RU*10)/10;" R:";INT(RR*10)/10;" D:";INT(RD*10)/10;" L:"; : INVERSE : PRINT INT(RL*10)/10 : NORMAL

1700 SX(STACK) = XX
1720 SY(STACK) = YY
1750 RETURN





2000 REM DEPTH-FIRST SEARCH ALGORITHM FOR GENERATING A RANDOMIZED INTERCONNECTED ROOM MAP
2100 X = INT(RND(1) * SIZE) + 1: Y = 1 : REM INITIAL ROOM PICK
2150 REM MARK CURRENT CELL AS VISITED
2180 VISIBLES(X,Y) = 1 : MAP(X,Y) = 1
2190 REM MARK THE LEVEL ENTRANCE AS WELL
2200 VISIBLES(1 + INT(SIZE / 2), SIZE) = 1 : MAP(1 + INT(SIZE / 2), SIZE) = 4
2220 VISIBLES(2 + INT(SIZE / 2), SIZE) = 1 : MAP(2 + INT(SIZE / 2), SIZE) = 3
2240 STACK = STACK + 2
2260 SX(1) = 1 + INT(SIZE / 2) : SY(1) = SIZE
2280 SX(2) = 2 + INT(SIZE / 2) : SY(2) = SIZE
2300 XX = X : YY = Y : AA$ = "C" : GOSUB 1500



2500 REM MARK CURRENT CELL AS VISITED
2600 GOSUB 1200
2650 IF DEBUG = 1 THEN CALL 768 : REM WAIT FOR KEYPRESS

2900 REM CHECK FOR UNVISITED NEIGHBOURS
3000 NEIGHBRS = 0 : REM RESET
3010 AVAILABLE(1) = 0 : REM UP
3020 AVAILABLE(2) = 0 : REM RIGHT
3030 AVAILABLE(3) = 0 : REM DOWN
3040 AVAILABLE(4) = 0 : REM LEFT
3100 FOR DIR = 1 TO 4
3200   IF DIR = 1 AND Y > 1 THEN GOTO 3800 : REM UP
3300   IF DIR = 2 AND X < SIZE THEN GOTO 3820 : REM RIGHT
3400   IF DIR = 3 AND Y < SIZE THEN GOTO 3840 : REM DOWN
3500   IF DIR = 4 AND X > 1 THEN GOTO 3860 : REM LEFT
3600 NEXT DIR
3700 GOTO 4000


3800 IF VISIBLES(X, Y - 1) = 0 THEN NEIGHBRS = NEIGHBRS + 1: AVAILABLE(1) = 1
3810 GOTO 3600

3820 IF VISIBLES(X + 1, Y) = 0 THEN NEIGHBRS = NEIGHBRS + 1: AVAILABLE(2) = 1
3830 GOTO 3600

3840 IF VISIBLES(X, Y + 1) = 0 THEN NEIGHBRS = NEIGHBRS + 1: AVAILABLE(3) = 1
3850 GOTO 3600

3860 IF VISIBLES(X - 1, Y) = 0 THEN NEIGHBRS = NEIGHBRS + 1: AVAILABLE(4) = 1
3870 GOTO 3600


4000 REM WE HAVE CHECKED THE NEIGHBOURS
4050 IF NEIGHBRS = 0 THEN GOTO 6000 : REMOVE THE CELL FROM STACK

4100 I = 1
4200 VTAB(24) : HTAB(1)
4210 RU = RND(1)*4 : RR = RND(1)*4 : RD = RND(1)*4 : RL = RND(1)*4 : REM DEFINE PROBABILITIES
4220 IF RU > RR AND RU > RD AND RU > RL AND AVAILABLE(1) > 0 THEN GOTO 4300
4230 IF RR > RU AND RR > RD AND RR > RL AND AVAILABLE(2) > 0 THEN GOTO 4400
4240 IF RD > RU AND RD > RR AND RD > RL AND AVAILABLE(3) > 0 THEN GOTO 4500
4250 IF RL > RU AND RL > RR AND RL > RD AND AVAILABLE(4) > 0 THEN GOTO 4600
4260 IF AVAILABLE(1) > 0 THEN GOTO 4300
4270 IF AVAILABLE(2) > 0 THEN GOTO 4400
4280 IF AVAILABLE(3) > 0 THEN GOTO 4500
4290 IF AVAILABLE(4) > 0 THEN GOTO 4600
4295 GOTO 4700

4300 Y = Y - 1 : GOTO 5000 : REM UP
4350 GOTO 4700
4400 X = X + 1 : GOTO 5200 : REM RIGHT
4450 GOTO 4700
4500 Y = Y + 1 : GOTO 5400 : REM DOWN
4550 GOTO 4700
4600 X = X - 1 : GOTO 5600 : REM LEFT
4650 GOTO 4700

4700 I = I + 1 : IF I > 3 THEN ? "GG": END
4800 GOTO 4200

5000 AA$ = "U" : REM REM UP
5010 IF MAP(X,Y) = 0 THEN MAP(X,Y) = 1
5050 VISIBLES(X,Y) = 1
5060 IF MAP(X,Y-1) < 2 THEN MAP(X,Y-1) = 2 : GOTO 5150
5070 IF MAP(X,Y-1) = 3 THEN MAP(X,Y-1) = 4
5140 REM TODO : CLOSED DOORS
5150 XX = X : YY = Y : GOSUB 1500
5190 GOTO 6400

5200 AA$ = "R" : REM RIGHT
5210 IF MAP(X,Y) = 0 THEN MAP(X,Y) = 3 : GOTO 5250
5220 IF MAP(X,Y) = 2 THEN MAP(X,Y) = 4
5250 VISIBLES(X,Y) = 1
5260 REM IF MAP(X-1,Y) = 0 THEN MAP(X-1,Y) = 1
5350 XX = X : YY = Y : GOSUB 1500
5390 GOTO 6400

5400 AA$ = "D" : REM DOWN
5405 IF MAP(X,Y) = 0 THEN MAP(X,Y) = 2 : GOTO 5450
5410 IF MAP(X,Y) = 3 THEN MAP(X,Y) = 4
5450 VISIBLES(X,Y) = 1
5460 REM IF MAP(X,Y-1) = 0 THEN MAP(X,Y-1) = 1
5470 XX = X : YY = Y : GOSUB 1500
5590 GOTO 6400

5600 AA$ = "L" : REM LEFT
5610 IF MAP(X,Y) = 0 THEN MAP(X,Y) = 1
5650 VISIBLES(X,Y) = 1
5660 IF MAP(X+1,Y) = 1 THEN MAP(X+1,Y) = 3 : GOTO 5750
5670 IF MAP(X+1,Y) = 2 THEN MAP(X+1,Y) = 4
5750 XX = X : YY = Y : GOSUB 1500
5790 GOTO 6400


6000 REM IF NO UNVISITED NEIGHBRS - BACKTRACK, OR
6100 REM IF
6200 SX(STACK) = 0 : SY(STACK) = 0 : STACK = STACK - 1 : VTAB(24): PRINT "REMOVED ";STACK;" AT ";X;"*";Y; " GETTING ";SX(STACK);"*";SY(STACK)

6400 REM
6440 REM VTAB(24): PRINT "GET STACK: ";STACK;" AT ";SX(STACK);"*";SY(STACK)
6450 IF SX(STACK) > 0 THEN X = SX(STACK) : Y = SY(STACK) : GOTO 2500
6500 REM ? STACK, SX(STACK), SY(STACK)

9900 RETURN

10000 E = PEEK(222)
10005 IF E = 0 OR E > 15 THEN PRINT : PRINT : CALL 2054
10020 IF E <> 2 AND E <> 3 AND E <> 8 AND E <> 11 THEN PRINT " ERROR";
10030 PRINT CHR$(7);" IN LINE ";PEEK(218) + PEEK(219) * 256
10050 ?
10060 PRINT AA$;" ";STACK;" ";XX;"*";YY;" ";X;"*";Y;" U:";INT(RU*10)/10;" R:";INT(RR*10)/10;" D:";INT(RD*10)/10;" L:";INT(RL*10)/10
10090 END

