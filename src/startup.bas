100 REM TEMPORARY LOADER FILE - PRINTS A TEXT FILE TO PREPARE THE SCREEN BEFORE THE GAME STARTS
200 REM WORKS PRETTY MUCH LIKE LOADING A BITMAP IMAGE WITH GAME UI, BUT WITH TEXT DATA INSTEAD
300 REM SUPPORTS UPPERCASE, LOWERCASE, INVERSE AND MOUSE TEXT AND IS USEFUL FOR CREATING TEXT UI
400 REM TRIGGERS: NORMAL [INVERSE] {MOUSETEXT}
500 REM "~" = IDENT SPACE, ";" = TWO VERTICAL LINES, "`" = TWO DOTS PUNCTUATION (:)
600 REM COMMA AND TWO DOTS CAN'T BE READ BY BASIC

650 BL = 1 : REM DATA IS LOADED FROM A TEXT FILE WITH READ OR BLOAD
700 I = 1 : B$ = "" : A = 16384 : Z = 15
800 DIM LINES$(Z)
900 D$ = CHR$(4)
1000 M$ = CHR$(27) + CHR$(15) : REM TURN SPECIAL CHARACTERS ON (80COL MOUSE TEXT CARD CHARS)
1100 N$ = CHR$(24) + CHR$(14) : REM TURN SPECIAL CHARACTERS OFF

1200 HGR : HGR2 : TEXT : PRINT D$;"PR#3" : REM TURN 80COL MODE ON
1250 FOR O = 1 TO 20
1260 PRINT
1270 NEXT O
1280 PRINT M$;"I";N$
1300 REM PRINT CHR$(4); "BLOAD PRLINES,A$7C00"
1400 IF BL = 1 THEN GOTO 1500
1420 PRINT M$;"C";N$;" Loading DATA ";M$;"Z";
1425 FOR P = 1 TO Z + 4
1430 PRINT "\\";
1435 NEXT P
1440 PRINT "_";N$;
1450 PRINT CHR$(4); "BLOAD UI,TTXT,A$4000"
1480 GOTO 2700

1500 REM LOADING THE DATA BY READING THE TEXT FILE (NOT USING BECAUSE IS VERY SLOW)
1600 REM ONERR GOTO 2600 : REM OPEN AND READ A TEXT FILE, SAVING THE DATA IN AN ARRAY (LINES$)
1700 PRINT M$;"C";N$;" Reading DATA ";M$;"Z";
1710 FOR P = 1 TO Z + 3
1720 PRINT "\\";
1730 NEXT P
1740 PRINT "_";N$;
1750 HTAB(17) : PRINT M$;" ";N$; : PRINT D$;"OPEN UI"
1800 PRINT M$;" ";N$; : PRINT D$;"READ UI"
1900 INPUT L : REM GET THE TOTAL LINES OF THE TEXT FILE (FIRST PARAMETER FROM TEXT FILE)
2000 PRINT M$;" ";N$; : INPUT H : REM HTAB(H) : REM GET LEFT OFFSET WHEN INSERTING THE TEXT (SECOND PARAMETER FROM TEXT FILE)
2100 INPUT V : REM VTAB(V) : REM GET TOP OFFSET WHEN INSERTING THE TEXT (THIRD PARAMETER FROM TEXT FILE)
2300 PRINT M$;" ";N$; : INPUT A$ : REM GET THE NEXT DATA ROW
2400 LINES$(I) = A$ : I = I + 1 : REM SAVE IT
2450 IF I > L THEN GOTO 2600
2500 GOTO 2300 : REM LOOP
2600 PRINT M$;" ";N$ : PRINT M$;"I";N$ : PRINT D$;"CLOSE"
2650 GOTO 7200

2700 REM TODO : ASM PRLINES
2750 REM GETS THE THREE VARIABLES AT THE BEGINNING OF THE TEXT FILE (L:LINE LENGTH, H:INDENT, V:TOP)
2800 REM ALSO WILL SAVE THE STARTING ADDRESS OF THE ACTUAL TEXT DATA BECAUSE IT CAN VARY
2850 HTAB(17) : PRINT M$;" ";N$;
2900 I = 0 : REM CURRENT ADDRESS POSITION FROM THE LOADED TEXT DATA
3000 E = 0 : REM CURRENT TEXT VAR
3100 DIM TXTDTA(4) : TXTDTA(1) = 0 : TXTDTA(2) = 0 : TXTDTA(3) = 0 : TXTDTA(4) = 0 : REM TEXT VARS HOLDER
3200 DIM CHARS(3)

3300 K = 0 : REM CURRENT X POSITION OF TEXT VARIABLE READING
3400 CHARS(1) = 0 : CHARS(2) = 0 : CHARS(3) = 0 : REM PARTS OF THE NUMBER

3500 REM ITTERATE THROUGH BYTES
3600 J = PEEK(A + I) : REM READ THE NEXT ADDRESS
3700 IF J = 141 THEN GOTO 4200 : REM LINE BREAK MARKS THE END OF A TEXT VARIABLE DATA
3800 K = K + 1
3900 CHARS(K) = J - 128
4000 I = I + 1
4100 GOTO 3500

4200 REM DATA FOR THE TEXT VARS WILL BE READ AS STRINGS AND THEN COMBINED INTO NUMBERS
4300 I$ = "" : I = I + 1
4400 FOR F = 0 TO K
4500 I$ = I$ + CHR$(CHARS(F + 1))
4600 NEXT F
4700 E = E + 1
4800 TXTDTA(E) = VAL(I$)
4900 IF E < 3 THEN GOTO 3300
5000 TXTDTA(4) = A + I : REM PRINT TXTDTA(1), TXTDTA(2), TXTDTA(3) , TXTDTA(4) : REM DEBUG THE TEXT DATA
5100 L = TXTDTA(1) : H = TXTDTA(2) : V = TXTDTA(3) : A = TXTDTA(4)
5300 REM HB = INT(A / 256) : TODO : PRLINES
5400 REM LB = A - (HB * 256)
5500 REM POKE 31994,HB
5600 REM POKE 31995,LB
5700 POKE 31996,L
5800 POKE 31997,H
5900 POKE 31998,V
6000 REM CALL 31744 : END : REM CALL PRLINES ASM
6050 PRINT M$;" ";N$;

6100 JJ = 0 : KK = 0
6200 II = 1
6300 LINES$(II) = ""
6400 KK = PEEK(16392 + JJ)
6500 IF KK = 141 GOTO 6900
6600 LINES$(II) = LINES$(II) + CHR$(KK)
6700 JJ = JJ + 1
6800 GOTO 6400
6900 JJ = JJ + 1 : II = II + 1
6950 PRINT M$;" ";N$;
7000 IF II < L+1 THEN GOTO 6300
7050 PRINT M$;"  ";N$ : PRINT M$;"I";N$

7200 REM UPDATING THE DATA IN PLACE
7210 PRINT M$;"C";N$;" Buffering UI ";M$;"Z";
7212 FOR P = 1 TO Z + 4
7213 PRINT "\\";
7214 NEXT P
7215 PRINT "_";N$;
7220 HTAB(17)
7225 PRINT M$;"   ";N$;
7300 FOR I = 1 TO L
7375   NE$ = ""
7400   A$ = LINES$(I) : M = LEN(A$) : D = 1
7600   FOR X = 1 TO M
7700     B$ = MID$(A$, X, 1)
7800     C = ASC(B$)
7900     IF C = 123 THEN NE$ = NE$ + M$ : GOTO 8600 : REM TURN MOUSE TEXT ON WITH TRIGGER: "{"
8000     IF C = 125 THEN NE$ = NE$ + N$ : GOTO 8600 : REM TURN MOUSE TEXT OFF WITH TRIGGER: "}"
8100     IF C = 91 THEN NE$ = NE$ + CHR$(15) : GOTO 8600 : REM TURN INVERSE ON WITH TRIGGER: "["
8200     IF C = 93 THEN NE$ = NE$ + CHR$(14) : GOTO 8600 : REM TURN INVERSE OFF WITH TRIGGER: "]"
8300     IF C = 59 THEN NE$ = NE$ + "\\" : GOTO 8600 : REM TYPE IN BETWEEN VERTICAL SPACE WITH TRIGGER: ";"
8400     IF C = 96 THEN NE$ = NE$ + ":" : GOTO 8600 : REM TYPE TWO DOTS PUNCTUATION ":" WITH TRIGGER: "`"
8500     IF C < 125 THEN NE$ = NE$ + B$ : REM WILL PRINT THE REQUESTED LETTER
8550     IF C = 126 THEN NE$ = NE$ + N$ + " " + M$ : REM SPACE INTERPRETATION: "~"
8600   NEXT X
8650   LINES$(I) = NE$ : PRINT M$;" ";N$;
8700 NEXT I
8800 PRINT M$;" ";N$

9100 HOME
9200 REM PRINTING THE DATA ON SCREEN
9300 FOR I = 1 TO Z
9350    HTAB(H) : VTAB (V + I - 1)
9400    ? LINES$(I)
9450 NEXT I

9980 REM RUNNING A NEW BASIC FILE SHOULD WIPE ALL THE ABOVE
9990 REM USED ONLY AT THE BEGINNING TO DRAW THE TEXT SCREEN UI
9995 VTAB(1) : PRINT D$;"RUN MAIN"
9999 REM VTAB (1) : END
